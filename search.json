[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Математичне моделювання в R",
    "section": "",
    "text": "Матеріали підготовлені для читання курсу “Вступ до прикладного математичного моделювання в R” [08.435] для студентів 3-го курсу, спеціальності економічна кібернетика.\n\n\nНавчальна дисципліна спрямована на вивчення основ прикладного математичного моделювання з використаням різних видів моделей та підходів до їх побудови, а також удосокналенню процесів роботи з даними та моделями на основі мови R.\nМісце навчальної дисципліни у підготовці здобувачів: програмні результати дисципліни використовуються під час вивчення таких навчальних дисциплін: “Математичні методи та моделі в аналізі великих даних”, “Економічна кібернетика”, “Дослідження операцій”, “Інтелектуальні технології моделювання у прийнятті рішень”. Закріплення на практиці здобутих програмних результатів відбувається під час проходження Навчальної практики з курсу «Економіко-математичне моделювання».\n\n\n\nМета навчальної дисципліни – формування у студентів теоретичних знань та практичних навичок використання мови програмування R для побудови, навчання та оцінки якості математичних моделей на основі регресії, класифікації, кластеризації та асоціативних правил.\n\n\n\nВикладач та слухач цього курсу, як очікується, повинні дотримуватися Кодексу академічної доброчесності університету:\n\nбудь-яка робота, подана здобувачем протягом курсу, має бути його власною роботою здобувача; не вдаватися до кроків, що можуть нечесно покращити Ваші результати чи погіршити/покращити результати інших здобувачів;\nякщо буде виявлено ознаки плагіату або іншої недобросовісної академічної поведінки, то студент буде позбавлений можливості отримати передбачені бали за завдання;\nне публікувати у відкритому доступі відповіді на запитання, що використовуються в рамках курсу для оцінювання знань здобувачів;\nпід час фінальних видів контролю необхідно працювати самостійно; не дозволяється говорити або обговорювати, а також не можна копіювати документи, використовувати електронні засоби отримання інформації.\n\nПорушення академічної доброчесності під час виконання контрольних завдань призведе до втрати балів або вживання заходів, які передбачені Кодексу академічної доброчесності НаУОА.\n\n\n\n\n\n\n\nМатеріали створені з використанням ряду технологій:\n\nR Language - безкоштована мова програмування для виконання досліджень у сфері статистики, машинного навчання та візуалізацї результатів.\nQuarto Book - система для публікації наукових та технічних текстів з відкритим кодом (R/Python/Julia/Observable).\nJupyterLab - середовище розробки на основі Jupyter Notebook. JupyterLab є розширеним веб-інтерфейсом для роботи з ноутбуками.\nGit/Github - система контролю версій та, відповідно, сервіс для організації зберігання коду, а також публікації статичних сторінок."
  },
  {
    "objectID": "02-pca.html",
    "href": "02-pca.html",
    "title": "1  Principal Component Analysis (in R)",
    "section": "",
    "text": "Груповий проєкт з курсу “Прикладне математичне моделювання в R”\nГрупа: ЕК-3.\nФакультет: Економічний факультет.\nРік: 2022"
  },
  {
    "objectID": "02-pca.html#мета-проєкту",
    "href": "02-pca.html#мета-проєкту",
    "title": "1  Principal Component Analysis (in R)",
    "section": "1.1 Мета проєкту",
    "text": "1.1 Мета проєкту\nМетою проєкту є теоретичне вивчення та практичне застосування алгоритмів з прикладного математичного моделювання в R. Додатковими задачами, які ставляться під час виконання проєкту є розвиток навиків самоосвіти та колективної роботи студентів. Основна задача, яка ставиться перед виконуючими - донести теоретичні засади такого методу аналізу, доступні пакети, візуалізувати роботу аналізу та практично показати використання методу."
  },
  {
    "objectID": "02-pca.html#теоретична-частина",
    "href": "02-pca.html#теоретична-частина",
    "title": "1  Principal Component Analysis (in R)",
    "section": "1.2 Теоретична частина",
    "text": "1.2 Теоретична частина\nВступ\nPrincipal Component Analysis або Аналіз головних компонентів (далі РСА) - техніка без вчителя для дослідницького аналізу даних, яка дозволяє краще візуалізувати варіацію, що знаходиться в наборі даних з багатьома змінними. Такий аналіз є дуже корисним у випадку так званих “широких” наборів даних, тобто, коли ми маємо багато змінних для кожної вибірки.\nЗменшення кількості змінних у наборі даних відбувається за рахунок точності, але тут зменшення розмірності полягає в тому, щоб обміняти невелику точність на простоту. Адже менші набори даних легше досліджувати і візуалізувати. Це робить аналіз даних набагато простішим і швидшим для алгоритмів машинного навчання без зайвих змінних для обробки.\nОтже, загальна ідея РСА - зменшити кількість змінних набору даних, зберігши при цьому якомога більше інфомації.\nДе є корисний такий метод?\nМетод корисний в будь-якій сфері, яка працює з великими наборами даних: медицина, наука, розробка і так далі. В таких випадках, коли присутня велика кількість змінних, ми не можемо побудувати графік даних в їхньому необробленому форматі, що дещо ускладнює розуміння досліджуваних тенденцій. РСА ж дозволяє побачити загальний вигляд даних, відмічаючи, які вибірки схожі одна на одну, а які дуже відрізняються. Це дозволяє визначити групи вибірок, які є схожими і з’ясувати, які змінні роблять одну групу відмінною від іншої.\nГоловні компоненти\nГоловні компоненти - це вже нові змінні, які будуються як лінійні комбінації або суміші вихідних змінних. Ці комбінації складаються таким чином, що нові змінні (наші головні компоненти) є некорельованими, а більша частина інформації, що міститься у вихідних змінних, стискається або витискається.\nЯкщо багато змінних корелюють одна з одною, то всі вони будуть вносити значний внесок в одну головну компоненту. Кожна компонента підсумовує певний відсоток загальної варіації в наборі даних. Якщо ваші вихідні змінні сильно корелюють між собою, ви зможете апроксимувати більшу частину складності вашого набору даних лише кількома головними компонентами. Коли ви додаєте більше головних компонент, ви узагальнюєте все більше вихідного набору даних. Додавання додаткових компонентів робить вашу оцінку загального набору даних більш точною, але і більш громіздкою.\nПроцес аналізу\nНа практиці використовується такі кроки в аналізі.\nСтандартизація\nРСА дуже чутлива до варіацій вихідних змінних. Тобто, якщо існують великі відмінності між діапазонами вихідних змінних, то такі змінні з більшими діапазонами будуть домінувати над змінними з малими діапазонами (наприклад, змінна, яка знаходиться в діапазоні від 0 до 10, буде домінуват над змінною, яка знаходиться в діапазоні від 0 до 1), що призведе до упереджених результатів.\nМатематично це можна зробити шляхом віднімання середнього знаечння та ділення та стандартне відхилення для кожного значення кожної змінної.\nОбчислення коваріаційної матриці\nМета цього кроку - зрозуміти, як змінні вхідного набору даних відхиляються від середнього значення по відношенню одна до одної, або, іншими словами, побачити, чи існує між ними зв’язок.Тому що іноді змінні сильно корелюють таким чином, що містять надлишкову інформацію. Так от, для того, щоб виявити ці кореляції, ми обчислюємо коваріаційну матрицю.\nКоваріаційна матриця - це симетрична матриця p × p (де p - кількість вимірів), яка має в якості записів коваріації, пов’язані з усіма можливими парами вихідних змінних.\nЩо коваріації, які ми маємо у вигляді елементів матриці, говорять нам про кореляції між змінними?\nМає значення знак коваріації: - якщо він позитивний, то дві змінні збільшуються або зменшуються разом (корелюють). - якщо від’ємний, то одна збільшується, коли інша зменшується (обернено корельована).\nОбчислення власних весторів та власних значень коваріаційної матриці для виявлення головних компонент\nКожен власний вектор має відповідне власне значення. Простими словами, власний вектор - це напрямок (вертикаль, 50 градусів), власне значення - це число, яке показує, наскільки сильно розрізняються дані в цьому напрямку. В такому випадку, власний вектор з найбільшим власним значенням є першою головною компонентою. Наступний власний вектор з великим власним значенням - друга головна компонента. І так далі.\nВажливо розуміти, що головні компоненти є менш інтерпретованими і не мають реального значення, оскільки вони побудовані як лінійні комбінації вихідних змінних.\nПакети, що використовуються для РСА\n\ntidyverse. Найпростіший пакет для застосування аналізу.\nFactoMineR. Пакет для узагальнення, візуалізації та опису наборів даних. Функція PCA().\nfactoextra для візуалізації та кращої інтерперетації результатів. Він є більш ширшим і використовуваним при дослідженні набору даних з допомогою РСА.\nstats - пакет з статистичними функціями, де знаходяться дуже популярні функції як prcomp() та princomp().\nade4 - пакет з інструментами для багатовимірного аналізу даних з функцією dudi.pca().\namap - пакет з інструментами для кластерзації та аналізу головних компонентів з функцією acp()."
  },
  {
    "objectID": "02-pca.html#практична-частина",
    "href": "02-pca.html#практична-частина",
    "title": "1  Principal Component Analysis (in R)",
    "section": "1.3 Практична частина",
    "text": "1.3 Практична частина\nТут ми розглянемо декілька методів аналізу набору даних за допомогою головних компонентів.\nПакет tidyverse\nТут ми будемо досліджувати набір даних USArrests, що вбудований в R, який містить кількість арештів на 100 000 людей в кожному штаті США в 1973 за вбивство, грабіж та насилля. Також він містить процент популяції, що живе в місті.\nЗавантажуємо пакет та датасет.\n\n# install.packages(\"tidyverse\")\nsuppressMessages(library(tidyverse))\n\n\ndata(\"USArrests\")\nhead(USArrests)\n\n\n\nA data.frame: 6 × 4\n\n    MurderAssaultUrbanPopRape\n    <dbl><int><int><dbl>\n\n\n    Alabama13.22365821.2\n    Alaska10.02634844.5\n    Arizona 8.12948031.0\n    Arkansas 8.81905019.5\n    California 9.02769140.6\n    Colorado 7.92047838.7\n\n\n\n\nПісля завантаження потрібних файлів та інструментів, ми можемо використати функцію prcomp() аби обрахувати головні компоненти набору даних. Обов’язково вкажемо scale = TRUE, щоб кожна змінна в наборі даних була масштабована так, щоб мати середнє значення 0 і стандартне відхилення 1 перед обчисленням головних компонент.\n\npc <- prcomp(USArrests, scale = TRUE)\n\nВласні вектори в R за замовчуванням спрямовані у від’ємному напрямку, тому ми помножимо їх на -1, щоб змінити знаки на протилежні.\n\npc$rotation <- -1*pc$rotation\npc$rotation\npc\n\n\n\nA matrix: 4 × 4 of type dbl\n\n    PC1PC2PC3PC4\n\n\n    Murder0.5358995-0.4181809 0.3412327-0.64922780\n    Assault0.5831836-0.1879856 0.2681484 0.74340748\n    UrbanPop0.2781909 0.8728062 0.3780158-0.13387773\n    Rape0.5434321 0.1673186-0.8177779-0.08902432\n\n\n\n\nStandard deviations (1, .., p=4):\n[1] 1.5748783 0.9948694 0.5971291 0.4164494\n\nRotation (n x k) = (4 x 4):\n               PC1        PC2        PC3         PC4\nMurder   0.5358995 -0.4181809  0.3412327 -0.64922780\nAssault  0.5831836 -0.1879856  0.2681484  0.74340748\nUrbanPop 0.2781909  0.8728062  0.3780158 -0.13387773\nRape     0.5434321  0.1673186 -0.8177779 -0.08902432\n\n\nБачимо, що перша головна компонента (РС1) має високе значення для вбивств, пограбувань та насильства, що означає, що вона (компонента) описує більшу частину варіації в цих змінних.\nТакож бачимо, що друга головна компонента (РС2) має високе значення в відсотку популяції, що живе в місті. Це означає, що компонента описує більшу частину варіації цієї змінної.\nОцінки головних компонент кожного штату зберігаються в колонці х, тому помножимо ці оцінки на -1, аби змінити знаки на протилежні.\n\npc$x <- -1*pc$x\nhead(pc$x)\npc\n\n\n\nA matrix: 6 × 4 of type dbl\n\n    PC1PC2PC3PC4\n\n\n    Alabama 0.9756604-1.1220012 0.43980366-0.154696581\n    Alaska 1.9305379-1.0624269-2.01950027 0.434175454\n    Arizona 1.7454429 0.7384595-0.05423025 0.826264240\n    Arkansas-0.1399989-1.1085423-0.11342217 0.180973554\n    California 2.4986128 1.5274267-0.59254100 0.338559240\n    Colorado 1.4993407 0.9776297-1.08400162-0.001450164\n\n\n\n\nStandard deviations (1, .., p=4):\n[1] 1.5748783 0.9948694 0.5971291 0.4164494\n\nRotation (n x k) = (4 x 4):\n               PC1        PC2        PC3         PC4\nMurder   0.5358995 -0.4181809  0.3412327 -0.64922780\nAssault  0.5831836 -0.1879856  0.2681484  0.74340748\nUrbanPop 0.2781909  0.8728062  0.3780158 -0.13387773\nRape     0.5434321  0.1673186 -0.8177779 -0.08902432\n\n\nДалі можемо створити biplot - діаграму, яка проектує кожне спостереження в наборі даних на діаграму розсіювання, яка використовує першу та другу головні компоненти в якості осей.\n\nbiplot(pc, scale = 0)\n\n\n\n\nШтати, що розташовані близько один до одного, мають подібні моделі даних щодо змінних. Також бачимо, що деякі штати більш тісно пов’язані з певними злочинами, ніж інші. Наприклад, Джорджія є найбільш близькою до змінної Murder. Якщо подивимося на штати з найвищим показником вбивств, то побачимо, що Джорджія очолює цей список.\n\nhead(USArrests[order(-USArrests$Murder),])\n\n\n\nA data.frame: 6 × 4\n\n    MurderAssaultUrbanPopRape\n    <dbl><int><int><dbl>\n\n\n    Georgia17.42116025.8\n    Mississippi16.12594417.1\n    Florida15.43358031.9\n    Louisiana15.42496622.2\n    South Carolina14.42794822.5\n    Alabama13.22365821.2\n\n\n\n\nМи можемо використати наступний код для розрахунку загальної дисперсії вихідного набору даних, що пояснюється кожною головною компонентою.\n\npca <- pc$sdev^2 / sum(pc$sdev^2)\npca\n\n\n0.6200603947873740.247441288134960.08914079514520740.0433575219324588\n\n\nЗ результатів бачимо, що:\n\nперша головна компонента пояснює 62% загальної варіації набору даних.\nдруга головна компонента пояснює 24.7% загальної варіації набору даних.\nтретя головна компонента пояснює 8.9% загальної варіації набору даних.\nчетверта головна компонента пояснює 4.3% загальної варіації набору даних.\n\nТобто, перші 2 головні компоненти описують добре майже весь датасет. Створимо графік для відображення всіх компонент.\n\nqplot(c(1:4), pca) + \n  geom_line() + \n  xlab(\"Головна компонента\") + \n  ylab(\"Пояснення варіації\")\n\nYour code contains a unicode char which cannot be displayed in your\ncurrent locale and R will silently convert it to an escaped form when the\nR kernel executes this code. This can lead to subtle errors if you use\nsuch chars to do comparisons. For more information, please see\nhttps://github.com/IRkernel/repr/wiki/Problems-with-unicode-on-windows\n\n\n\n\n\nПеревіримо кореляцію головних компонент зі змінними в наборі даних.\n\nUS <- cbind(USArrests, pc$x[,1:2])\nhead(US)\ncor(USArrests, US[,5:6])\n\n\n\nA data.frame: 6 × 6\n\n    MurderAssaultUrbanPopRapePC1PC2\n    <dbl><int><int><dbl><dbl><dbl>\n\n\n    Alabama13.22365821.2 0.9756604-1.1220012\n    Alaska10.02634844.5 1.9305379-1.0624269\n    Arizona 8.12948031.0 1.7454429 0.7384595\n    Arkansas 8.81905019.5-0.1399989-1.1085423\n    California 9.02769140.6 2.4986128 1.5274267\n    Colorado 7.92047838.7 1.4993407 0.9776297\n\n\n\n\n\n\nA matrix: 4 × 2 of type dbl\n\n    PC1PC2\n\n\n    Murder0.8439764-0.4160354\n    Assault0.9184432-0.1870211\n    UrbanPop0.4381168 0.8683282\n    Rape0.8558394 0.1664602\n\n\n\n\nМи можемо надалі використовувати перші 2 компоненти для досліджень. Це значно спрощує роботу, адже тепер ми маємо лише 2 змінні, що включають в себе більшу частину датасету.\nПакет ade4() з функцією dudi.pca()\n\n# install.packages(\"ade4\")\nlibrary(ade4)\n\nWarning message in install.packages(\"ade4\"):\n\"'lib = \"E:/mlSoftware/Anaconda3/Lib/R/library\"' is not writable\"\n\n\nERROR: Error in install.packages(\"ade4\"): unable to install packages\n\n\n\npc1 <- dudi.pca(USArrests, nf = 5, scannf = FALSE)\npc1$eig\n\n\npc1$co\n\n\nhead(pc1$li)\n\n\nlibrary(ggplot2)\nscores <- as.data.frame(pc1$li)\n\n\nggplot(data = scores, aes(x = Axis1, y = Axis2, label = rownames(scores))) +\n  geom_hline(yintercept = 0, colour = \"gray65\") +\n  geom_vline(xintercept = 0, colour = \"gray65\") +\n  geom_text(colour = \"red\", alpha = 0.8, size = 4) +\n  ggtitle(\"PCA графік\")"
  }
]